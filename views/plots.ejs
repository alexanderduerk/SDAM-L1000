<!doctype html>
<html>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
  <body>
    <!-- NEW -->
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <link rel="stylesheet" href="public/css/plots.css" />
    <div id="GridLayout">
      <div class="chart-container">
        <canvas id="myChart1" class="Chart"></canvas>
        <button
          class="chart-button"
          onclick="downloadData(myChart1, xValues1, yValues1)"
        >
          Download Data
        </button>
        <a id="download-link1" download="chart1.csv" style="display: none"></a>
        <button class="download-image">Download Chart</button>
      </div>
      <div class="chart-container">
        <canvas id="myChart2" class="Chart"></canvas>
        <button class="chart-button" onclick="downloadData(xValues2, yValues2)">
          Download Data
        </button>
        <a id="download-link2" download="chart2.csv" style="display: none"></a>
        <button class="download-image" onclick="downloadChart()">
          Download Chart
        </button>
      </div>
      <div class="chart-container">
        <canvas id="myChart3" class="Chart"></canvas>
        <button class="chart-button" onclick="downloadData(xValues3, yValues3)">
          Download Data
        </button>
        <a id="download-link3" download="chart3.csv" style="display: none"></a>
        <button class="download-image">Download Chart</button>
      </div>
    </div>

    <form>
      <!-- Multiple Canvas / Charts which will be displayed -->
      <input type="hidden" id="data1" value="<%= JSON.stringify(data) %>" />
      <input type="hidden" id="data2" value="<%= JSON.stringify(data) %>" />
      <input type="hidden" id="data3" value="<%= JSON.stringify(data) %>" />
    </form>
    <script>
      // First chart data
      const rawData1 = document.getElementById('data1').value;
      const data1 = JSON.parse(rawData1);

      const xValues1 = [];
      const yValues1 = [];

      // Sort data by tas values in ascending order for first
      data1.sort((a, b) => a.tas - b.tas);

      for (const row of data1) {
        xValues1.push(row.sig_name); // Using sig_name for better label variety
        yValues1.push(row.tas); // Keeping tas as y-axis values
      }

      new Chart('myChart1', {
        type: 'bar',
        data: {
          labels: xValues1, // X-axis labels from sig_name array
          datasets: [
            {
              label: 'TAS',
              data: yValues1, // Y-axis data from tas array
              backgroundColor: 'rgba(255, 99, 132, 0.2)',
              borderColor: 'rgba(255, 99, 132, 1)',
              borderWidth: 1,
            },
          ],
        },
        options: {
          scales: {
            x: {
              type: 'category', // X-axis is categorical
            },
            y: {
              beginAtZero: true, // Start y-axis at 0
            },
          },
        },
      });

      // Second chart data
      const rawData2 = document.getElementById('data2').value;
      const data2 = JSON.parse(rawData2);

      const xValues2 = [];
      const yValues2 = [];

      // Sort and populate data for the second chart
      data2.sort((a, b) => a.ss_ngene - b.ss_ngene);
      for (const row of data2) {
        xValues2.push(row.sig_name);
        yValues2.push(row.ss_ngene);
      }

      // Create the second chart
      new Chart('myChart2', {
        type: 'bar',
        data: {
          labels: xValues2,
          datasets: [
            {
              label: 'ss_ngene',
              data: yValues2,
              backgroundColor: 'rgba(54, 162, 235, 0.2)',
              borderColor: 'rgba(54, 162, 235, 1)',
              borderWidth: 1,
            },
          ],
        },
        options: {
          scales: {
            x: { type: 'category' },
            y: { beginAtZero: true },
          },
        },
      });

      // NEW THIRD CHART
      const rawData3 = document.getElementById('data3').value;
      const data3 = JSON.parse(rawData3);

      const xValues3 = [];
      const yValues3 = [];

      // Sort and populate data for the third chart
      data3.sort((a, b) => a.pert_dose - b.pert_dose);
      for (const row of data3) {
        xValues3.push(row.pert_dose);
        yValues3.push(row.tas);
      }

      // Create the third chart
      new Chart('myChart3', {
        type: 'bar',
        data: {
          labels: xValues3,
          datasets: [
            {
              label: 'tas',
              data: yValues3,
              backgroundColor: 'rgba(54, 162, 235, 0.2)',
              borderColor: 'rgba(54, 162, 235, 1)',
              borderWidth: 1,
            },
          ],
        },
        options: {
          scales: {
            x: { type: 'category' },
            y: { beginAtZero: true },
          },
        },
      });
      const charts = document.querySelectorAll('canvas');

      charts.forEach((chart) => {
        // Set initial width and height (replace 50% with your desired size)
        chart.style.width = '50%';
        chart.style.height = '50%';

        chart.addEventListener('mouseenter', () => {
          chart.style.width = '100%'; // Increase width to 75% on hover
          chart.style.height = '100%'; // Increase height to 75% on hover
        });
        chart.addEventListener('mouseleave', () => {
          chart.style.width = '50%'; // Reset width to 100% on mouse leave
          chart.style.height = '50%'; // Reset height to 100% on mouse leave
        });
      });
      // Button function chart
      const buttons = document.querySelectorAll('.chart-button');
    </script>
  </body>
</html>
